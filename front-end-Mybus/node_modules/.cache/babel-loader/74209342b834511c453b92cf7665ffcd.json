{"ast":null,"code":"import { GET_BUS_DETAILS_FAIL, GET_BUS_DETAILS_REQUEST, GET_BUS_DETAILS_SUCCESS, UPDATE_BOOKING_DETAILS } from \"./actionTypes\";\nconst initState = {\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  routeDetails: {},\n  matchedBuses: [],\n  busIdWithSeatsObj: {},\n  operatorName: \"\",\n  seats: [],\n  passengerDetails: [],\n  email: \"\",\n  phoneNumber: \"\",\n  fare: 0,\n  busId: \"\",\n  departureDetails: {\n    city: \"\",\n    location: \"\",\n    time: 0,\n    date: \"\"\n  },\n  arrivalDetails: {\n    city: \"\",\n    location: \"\",\n    time: 0,\n    date: \"\"\n  },\n  duration: 0,\n  isBusinessTravel: false,\n  businessDetails: {\n    gst: \"\",\n    name: \"\",\n    address: \"\",\n    email: \"\"\n  },\n  isInsurance: false,\n  isCovidDonated: false\n};\nexport const busDetailsReducer = (state = initState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_BUS_DETAILS_REQUEST:\n      return { ...state,\n        isLoading: true,\n        isSuccess: false,\n        isError: false\n      };\n\n    case GET_BUS_DETAILS_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        isSuccess: true,\n        routeDetails: payload.route,\n        matchedBuses: payload.matchedBuses,\n        busIdWithSeatsObj: payload.busIdWithSeatsObj\n      };\n\n    case UPDATE_BOOKING_DETAILS:\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        isSuccess: true,\n        [payload[\"key\"]]: payload[\"value\"]\n      };\n\n    case GET_BUS_DETAILS_FAIL:\n      return { ...state,\n        isLoading: false,\n        isError: true,\n        isSuccess: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mac/Dropbox/Mac/Downloads/redbus-master/front-end-redbus/src/Redux/BookBus/reducer.js"],"names":["GET_BUS_DETAILS_FAIL","GET_BUS_DETAILS_REQUEST","GET_BUS_DETAILS_SUCCESS","UPDATE_BOOKING_DETAILS","initState","isLoading","isSuccess","isError","routeDetails","matchedBuses","busIdWithSeatsObj","operatorName","seats","passengerDetails","email","phoneNumber","fare","busId","departureDetails","city","location","time","date","arrivalDetails","duration","isBusinessTravel","businessDetails","gst","name","address","isInsurance","isCovidDonated","busDetailsReducer","state","type","payload","route"],"mappings":"AAAA,SACEA,oBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,sBAJF,QAKO,eALP;AAOA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,KADK;AAEhBC,EAAAA,SAAS,EAAE,KAFK;AAGhBC,EAAAA,OAAO,EAAE,KAHO;AAIhBC,EAAAA,YAAY,EAAE,EAJE;AAKhBC,EAAAA,YAAY,EAAE,EALE;AAMhBC,EAAAA,iBAAiB,EAAE,EANH;AAQhBC,EAAAA,YAAY,EAAE,EARE;AAShBC,EAAAA,KAAK,EAAE,EATS;AAUhBC,EAAAA,gBAAgB,EAAE,EAVF;AAWhBC,EAAAA,KAAK,EAAE,EAXS;AAYhBC,EAAAA,WAAW,EAAE,EAZG;AAahBC,EAAAA,IAAI,EAAE,CAbU;AAchBC,EAAAA,KAAK,EAAE,EAdS;AAehBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,IAAI,EAAE,EADU;AAEhBC,IAAAA,QAAQ,EAAE,EAFM;AAGhBC,IAAAA,IAAI,EAAE,CAHU;AAIhBC,IAAAA,IAAI,EAAE;AAJU,GAfF;AAqBhBC,EAAAA,cAAc,EAAE;AACdJ,IAAAA,IAAI,EAAE,EADQ;AAEdC,IAAAA,QAAQ,EAAE,EAFI;AAGdC,IAAAA,IAAI,EAAE,CAHQ;AAIdC,IAAAA,IAAI,EAAE;AAJQ,GArBA;AA2BhBE,EAAAA,QAAQ,EAAE,CA3BM;AA4BhBC,EAAAA,gBAAgB,EAAE,KA5BF;AA6BhBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,GAAG,EAAE,EADU;AAEfC,IAAAA,IAAI,EAAE,EAFS;AAGfC,IAAAA,OAAO,EAAE,EAHM;AAIff,IAAAA,KAAK,EAAE;AAJQ,GA7BD;AAmChBgB,EAAAA,WAAW,EAAE,KAnCG;AAoChBC,EAAAA,cAAc,EAAE;AApCA,CAAlB;AAuCA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAG7B,SAAT,EAAoB;AAAE8B,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,KAA0C;AACzE,UAAQD,IAAR;AACE,SAAKjC,uBAAL;AACE,aAAO,EACL,GAAGgC,KADE;AAEL5B,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKL,uBAAL;AACE,aAAO,EACL,GAAG+B,KADE;AAEL5B,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,OAAO,EAAE,KAHJ;AAILD,QAAAA,SAAS,EAAE,IAJN;AAKLE,QAAAA,YAAY,EAAE2B,OAAO,CAACC,KALjB;AAML3B,QAAAA,YAAY,EAAE0B,OAAO,CAAC1B,YANjB;AAOLC,QAAAA,iBAAiB,EAAEyB,OAAO,CAACzB;AAPtB,OAAP;;AAUF,SAAKP,sBAAL;AACE,aAAO,EACL,GAAG8B,KADE;AAEL5B,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,OAAO,EAAE,KAHJ;AAILD,QAAAA,SAAS,EAAE,IAJN;AAKL,SAAC6B,OAAO,CAAC,KAAD,CAAR,GAAkBA,OAAO,CAAC,OAAD;AALpB,OAAP;;AAQF,SAAKnC,oBAAL;AACE,aAAO,EACL,GAAGiC,KADE;AAEL5B,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,OAAO,EAAE,IAHJ;AAILD,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF;AACE,aAAO2B,KAAP;AArCJ;AAuCD,CAxCM","sourcesContent":["import {\n  GET_BUS_DETAILS_FAIL,\n  GET_BUS_DETAILS_REQUEST,\n  GET_BUS_DETAILS_SUCCESS,\n  UPDATE_BOOKING_DETAILS,\n} from \"./actionTypes\";\n\nconst initState = {\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  routeDetails: {},\n  matchedBuses: [],\n  busIdWithSeatsObj: {},\n\n  operatorName: \"\",\n  seats: [],\n  passengerDetails: [],\n  email: \"\",\n  phoneNumber: \"\",\n  fare: 0,\n  busId: \"\",\n  departureDetails: {\n    city: \"\",\n    location: \"\",\n    time: 0,\n    date: \"\",\n  },\n  arrivalDetails: {\n    city: \"\",\n    location: \"\",\n    time: 0,\n    date: \"\",\n  },\n  duration: 0,\n  isBusinessTravel: false,\n  businessDetails: {\n    gst: \"\",\n    name: \"\",\n    address: \"\",\n    email: \"\",\n  },\n  isInsurance: false,\n  isCovidDonated: false,\n};\n\nexport const busDetailsReducer = (state = initState, { type, payload }) => {\n  switch (type) {\n    case GET_BUS_DETAILS_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        isError: false,\n      };\n\n    case GET_BUS_DETAILS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        isSuccess: true,\n        routeDetails: payload.route,\n        matchedBuses: payload.matchedBuses,\n        busIdWithSeatsObj: payload.busIdWithSeatsObj,\n      };\n\n    case UPDATE_BOOKING_DETAILS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        isSuccess: true,\n        [payload[\"key\"]]: payload[\"value\"],\n      };\n\n    case GET_BUS_DETAILS_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n        isSuccess: false,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}