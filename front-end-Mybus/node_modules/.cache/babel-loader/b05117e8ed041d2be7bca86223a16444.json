{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nconst getBusMongoRequest = () => {\n  return {\n    type: actionTypes.GET_BUS_MONGO_REQUEST\n  };\n};\n\nconst getBusMongoSuccess = payload => {\n  return {\n    type: actionTypes.GET_BUS_MONGO_SUCCESS,\n    payload: payload\n  };\n};\n\nconst getBusMongoFailure = () => {\n  return {\n    type: actionTypes.GET_BUS_MONGO_SUCCESS\n  };\n};\n\nconst getBusOnId = payload => {\n  return {\n    type: actionTypes.GET_BUS_MONGO_ID_SUCCESS,\n    payload\n  };\n};\n\nconst getBusData2 = () => dispatch => {\n  dispatch(getBusMongoRequest());\n  axios.get(`${process.env.REACT_APP_BACKEND_URL}/v1/api/busservice/`).then(res => {\n    console.log(\"rsponse from db\", res);\n    dispatch(getBusMongoSuccess(res.data.data));\n  }).catch(err => {\n    console.log(\"error in bus data\", err);\n    dispatch(getBusMongoFailure());\n  });\n};\n\nconst getBusOnIdThunk = id => dispatch => {\n  dispatch(getBusMongoRequest());\n  axios.get(`${process.env.REACT_APP_BACKEND_URL}/v1/api/busservice/${id}`).then(res => {\n    console.log(\"response for id\");\n    dispatch(getBusOnId(res.data));\n  }).catch(err => dispatch(getBusMongoFailure()));\n};\n\nexport { getBusData2, getBusOnIdThunk };","map":{"version":3,"sources":["/Users/mac/Dropbox/Mac/Downloads/redbus-master/front-end-Mybus/src/Redux/busService/action.js"],"names":["actionTypes","axios","getBusMongoRequest","type","GET_BUS_MONGO_REQUEST","getBusMongoSuccess","payload","GET_BUS_MONGO_SUCCESS","getBusMongoFailure","getBusOnId","GET_BUS_MONGO_ID_SUCCESS","getBusData2","dispatch","get","process","env","REACT_APP_BACKEND_URL","then","res","console","log","data","catch","err","getBusOnIdThunk","id"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,OAAD,IAAa;AACtC,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,qBADb;AAELD,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAG,MAAM;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAEH,WAAW,CAACO;AADb,GAAP;AAGD,CAJD;;AAMA,MAAME,UAAU,GAAIH,OAAD,IAAa;AAC9B,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACU,wBADb;AAELJ,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMK,WAAW,GAAG,MAAOC,QAAD,IAAc;AACtCA,EAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AACAD,EAAAA,KAAK,CACFY,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,qBAD5C,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAA/B;AACAN,IAAAA,QAAQ,CAACP,kBAAkB,CAACa,GAAG,CAACG,IAAJ,CAASA,IAAV,CAAnB,CAAR;AACD,GALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,GAAjC;AACAX,IAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR;AACD,GATH;AAUD,CAZD;;AAaA,MAAMgB,eAAe,GAAIC,EAAD,IAASb,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AACAD,EAAAA,KAAK,CACFY,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,sBAAqBS,EAAG,EADpE,EAEGR,IAFH,CAESC,GAAD,IAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAR,IAAAA,QAAQ,CAACH,UAAU,CAACS,GAAG,CAACG,IAAL,CAAX,CAAR;AACD,GALH,EAMGC,KANH,CAMUC,GAAD,IAASX,QAAQ,CAACJ,kBAAkB,EAAnB,CAN1B;AAOD,CATD;;AAUA,SAASG,WAAT,EAAsBa,eAAtB","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nimport axios from \"axios\";\n\nconst getBusMongoRequest = () => {\n  return {\n    type: actionTypes.GET_BUS_MONGO_REQUEST,\n  };\n};\n\nconst getBusMongoSuccess = (payload) => {\n  return {\n    type: actionTypes.GET_BUS_MONGO_SUCCESS,\n    payload: payload,\n  };\n};\n\nconst getBusMongoFailure = () => {\n  return {\n    type: actionTypes.GET_BUS_MONGO_SUCCESS,\n  };\n};\n\nconst getBusOnId = (payload) => {\n  return {\n    type: actionTypes.GET_BUS_MONGO_ID_SUCCESS,\n    payload,\n  };\n};\n\nconst getBusData2 = () => (dispatch) => {\n  dispatch(getBusMongoRequest());\n  axios\n    .get(`${process.env.REACT_APP_BACKEND_URL}/v1/api/busservice/`)\n    .then((res) => {\n      console.log(\"rsponse from db\", res);\n      dispatch(getBusMongoSuccess(res.data.data));\n    })\n    .catch((err) => {\n      console.log(\"error in bus data\", err);\n      dispatch(getBusMongoFailure());\n    });\n};\nconst getBusOnIdThunk = (id) => (dispatch) => {\n  dispatch(getBusMongoRequest());\n  axios\n    .get(`${process.env.REACT_APP_BACKEND_URL}/v1/api/busservice/${id}`)\n    .then((res) => {\n      console.log(\"response for id\");\n      dispatch(getBusOnId(res.data));\n    })\n    .catch((err) => dispatch(getBusMongoFailure()));\n};\nexport { getBusData2, getBusOnIdThunk };\n"]},"metadata":{},"sourceType":"module"}