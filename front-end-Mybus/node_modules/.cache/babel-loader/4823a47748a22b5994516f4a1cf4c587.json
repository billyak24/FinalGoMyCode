{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nconst initState = {\n  isLoggedIn: false,\n  currentCustomer: null,\n  error: false,\n  isLoading: false\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_SUCCESS:\n      return { ...state,\n        isLoggedIn: true,\n        currentCustomer: {\n          name: action.payload.name,\n          googleId: action.payload.googleId,\n          email: action.payload.email,\n          profilePicture: action.payload.imageUrl\n        },\n        error: false\n      };\n\n    case actionTypes.LOGIN_FAILURE:\n      return { ...state,\n        isLoggedIn: false,\n        error: true\n      };\n\n    case actionTypes.LOGOUT:\n      return { ...state,\n        isLoggedIn: false,\n        currentCustomer: null\n      };\n\n    case actionTypes.ADD_CUSTOMER_MONGO_REQUEST:\n      return { ...state,\n        isLoading: true,\n        error: false\n      };\n\n    case actionTypes.ADD_CUSTOMER_MONGO_SUCCESS:\n      console.log(typeof action.payload);\n\n      if (Array.isArray(action.payload)) {\n        console.log(\"Action payload auth: \");\n        return state;\n      }\n\n      return { ...state,\n        isLoading: false,\n        error: false,\n        currentCustomer: { ...state.currentCustomer,\n          _id: action.payload\n        }\n      };\n\n    case actionTypes.ADD_CUSTOMER_MONGO_FAILURE:\n      return { ...state,\n        isLoading: false,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { authReducer };","map":{"version":3,"sources":["/Users/mac/Dropbox/Mac/Downloads/Mybus-master/front-end-Mybus/src/Redux/auth/authReducer.js"],"names":["actionTypes","initState","isLoggedIn","currentCustomer","error","isLoading","authReducer","state","action","type","LOGIN_SUCCESS","name","payload","googleId","email","profilePicture","imageUrl","LOGIN_FAILURE","LOGOUT","ADD_CUSTOMER_MONGO_REQUEST","ADD_CUSTOMER_MONGO_SUCCESS","console","log","Array","isArray","_id","ADD_CUSTOMER_MONGO_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,KADI;AAEhBC,EAAAA,eAAe,EAAE,IAFD;AAGhBC,EAAAA,KAAK,EAAE,KAHS;AAIhBC,EAAAA,SAAS,EAAE;AAJK,CAAlB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,SAAT,EAAoBO,MAApB,KAA+B;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACU,aAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,eAAe,EAAE;AACfQ,UAAAA,IAAI,EAAEH,MAAM,CAACI,OAAP,CAAeD,IADN;AAEfE,UAAAA,QAAQ,EAAEL,MAAM,CAACI,OAAP,CAAeC,QAFV;AAGfC,UAAAA,KAAK,EAAEN,MAAM,CAACI,OAAP,CAAeE,KAHP;AAIfC,UAAAA,cAAc,EAAEP,MAAM,CAACI,OAAP,CAAeI;AAJhB,SAHZ;AASLZ,QAAAA,KAAK,EAAE;AATF,OAAP;;AAYF,SAAKJ,WAAW,CAACiB,aAAjB;AACE,aAAO,EAAE,GAAGV,KAAL;AAAYL,QAAAA,UAAU,EAAE,KAAxB;AAA+BE,QAAAA,KAAK,EAAE;AAAtC,OAAP;;AAEF,SAAKJ,WAAW,CAACkB,MAAjB;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYL,QAAAA,UAAU,EAAE,KAAxB;AAA+BC,QAAAA,eAAe,EAAE;AAAhD,OAAP;;AAEF,SAAKH,WAAW,CAACmB,0BAAjB;AACE,aAAO,EAAE,GAAGZ,KAAL;AAAYF,QAAAA,SAAS,EAAE,IAAvB;AAA6BD,QAAAA,KAAK,EAAE;AAApC,OAAP;;AACF,SAAKJ,WAAW,CAACoB,0BAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOd,MAAM,CAACI,OAA1B;;AAEA,UAAIW,KAAK,CAACC,OAAN,CAAchB,MAAM,CAACI,OAArB,CAAJ,EAAmC;AACjCS,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,eAAOf,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,KAAK,EAAE,KAHF;AAILD,QAAAA,eAAe,EAAE,EAAE,GAAGI,KAAK,CAACJ,eAAX;AAA4BsB,UAAAA,GAAG,EAAEjB,MAAM,CAACI;AAAxC;AAJZ,OAAP;;AAMF,SAAKZ,WAAW,CAAC0B,0BAAjB;AACE,aAAO,EAAE,GAAGnB,KAAL;AAAYF,QAAAA,SAAS,EAAE,KAAvB;AAA8BD,QAAAA,KAAK,EAAE;AAArC,OAAP;;AACF;AACE,aAAOG,KAAP;AAtCJ;AAwCD,CAzCD;;AA0CA,SAASD,WAAT","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nconst initState = {\n  isLoggedIn: false,\n  currentCustomer: null,\n  error: false,\n  isLoading: false,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        currentCustomer: {\n          name: action.payload.name,\n          googleId: action.payload.googleId,\n          email: action.payload.email,\n          profilePicture: action.payload.imageUrl,\n        },\n        error: false,\n      };\n\n    case actionTypes.LOGIN_FAILURE:\n      return { ...state, isLoggedIn: false, error: true };\n\n    case actionTypes.LOGOUT:\n      return { ...state, isLoggedIn: false, currentCustomer: null };\n\n    case actionTypes.ADD_CUSTOMER_MONGO_REQUEST:\n      return { ...state, isLoading: true, error: false };\n    case actionTypes.ADD_CUSTOMER_MONGO_SUCCESS:\n      console.log(typeof action.payload);\n\n      if (Array.isArray(action.payload)) {\n        console.log(\"Action payload auth: \");\n        return state;\n      }\n      return {\n        ...state,\n        isLoading: false,\n        error: false,\n        currentCustomer: { ...state.currentCustomer, _id: action.payload },\n      };\n    case actionTypes.ADD_CUSTOMER_MONGO_FAILURE:\n      return { ...state, isLoading: false, error: true };\n    default:\n      return state;\n  }\n};\nexport { authReducer };\n"]},"metadata":{},"sourceType":"module"}