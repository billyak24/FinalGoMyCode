{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nconst getRoutesRequest = () => {\n  return {\n    type: actionTypes.GET_ROUTES_REQUEST\n  };\n};\n\nconst getRoutesSuccess = routes => {\n  return {\n    type: actionTypes.GET_ROUTES_SUCCESS,\n    payload: routes\n  };\n};\n\nconst getRoutesFailure = () => {\n  return {\n    type: actionTypes.GET_ROUTES_FAILURE\n  };\n};\n\nconst getRoutes = () => {\n  console.log(\"heloooo\");\n  return async dispatch => {\n    dispatch(getRoutesRequest());\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/v1/api/routes`);\n      dispatch(getRoutesSuccess(res.data));\n    } catch (err) {\n      dispatch(getRoutesFailure());\n    }\n  };\n};\n\nexport { getRoutes };","map":{"version":3,"sources":["/Users/mac/Dropbox/Mac/Downloads/redbus-master/front-end-Mybus/src/Redux/routes/action.js"],"names":["actionTypes","axios","getRoutesRequest","type","GET_ROUTES_REQUEST","getRoutesSuccess","routes","GET_ROUTES_SUCCESS","payload","getRoutesFailure","GET_ROUTES_FAILURE","getRoutes","console","log","dispatch","res","get","process","env","REACT_APP_BACKEND_URL","data","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJD;;AAKA,MAAMC,gBAAgB,GAAIC,MAAD,IAAY;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,kBADb;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMG,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AACLN,IAAAA,IAAI,EAAEH,WAAW,CAACU;AADb,GAAP;AAGD,CAJD;;AAKA,MAAMC,SAAS,GAAG,MAAM;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR;;AACA,QAAI;AACF,YAAMa,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CACf,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,gBADrB,CAAlB;AAGAL,MAAAA,QAAQ,CAACT,gBAAgB,CAACU,GAAG,CAACK,IAAL,CAAjB,CAAR;AACD,KALD,CAKE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD;AACF,GAVD;AAWD,CAbD;;AAeA,SAASE,SAAT","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nconst getRoutesRequest = () => {\n  return {\n    type: actionTypes.GET_ROUTES_REQUEST,\n  };\n};\nconst getRoutesSuccess = (routes) => {\n  return {\n    type: actionTypes.GET_ROUTES_SUCCESS,\n    payload: routes,\n  };\n};\nconst getRoutesFailure = () => {\n  return {\n    type: actionTypes.GET_ROUTES_FAILURE,\n  };\n};\nconst getRoutes = () => {\n  console.log(\"heloooo\");\n  return async (dispatch) => {\n    dispatch(getRoutesRequest());\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_BACKEND_URL}/v1/api/routes`\n      );\n      dispatch(getRoutesSuccess(res.data));\n    } catch (err) {\n      dispatch(getRoutesFailure());\n    }\n  };\n};\n\nexport { getRoutes };\n"]},"metadata":{},"sourceType":"module"}